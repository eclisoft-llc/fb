/****** Object:  StoredProcedure [dbo].[STGproc]    Script Date: 9/19/2022 5:05:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[STGproc](@TBL VARCHAR(100),@FPATH VARCHAR(200),@FNAME VARCHAR(150))
AS
BEGIN
	BEGIN TRY
	SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
	IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@TBL)
		BEGIN	   
	    
			DECLARE @SQL VARCHAR(MAX),@DESTBL VARCHAR(50),@UPD VARCHAR(MAX),@INS VARCHAR(MAX)
			,@INSVALS VARCHAR(MAX),@KEYS VARCHAR(4000),@NKEYS VARCHAR(4000),@KEYSTYPE VARCHAR(4000),@UPDKEY_WHERE VARCHAR(4000)
			,@UPD_WHERE VARCHAR(MAX),@INSKEY_WHERE VARCHAR(MAX),@DELKEY_WHERE VARCHAR(MAX),@INSP2 VARCHAR(MAX)

		
				SET @DESTBL=REPLACE(@TBL,'STG_','')
		
				SET @INSKEY_WHERE=(SELECT REPLACE(STUFF((SELECT ',T.[' + s.value + '] IS NULL' FROM
				dbo.STGkeys t CROSS APPLY STRING_SPLIT(t.TKEYS, ',') s 
				WHERE TNAME=@DESTBL
				FOR XML PATH('')),1,1,''),',',' AND '))
			
				SET @UPDKEY_WHERE=(SELECT REPLACE(STUFF((SELECT ',T.[' + s.value + '] IS NOT NULL' FROM
				dbo.STGkeys t CROSS APPLY STRING_SPLIT(t.TKEYS, ',') s 
				WHERE TNAME=@DESTBL
				FOR XML PATH('')),1,1,''),',',' AND '))
			
				IF EXISTS(SELECT 1 FROM dbo.STGkeys WHERE TNAME=@DESTBL AND INCLUDEDCOLS IS NOT NULL)
					SET @UPD_WHERE=(SELECT REPLACE(STUFF((SELECT '@ISNULL(T.[' + LTRIM(RTRIM(REPLACE(REPLACE(s.value,CHAR(10),''),CHAR(13),''))) + '],'''')!=ISNULL(S.[' + 
					LTRIM(RTRIM(REPLACE(REPLACE(s.value,CHAR(10),''),CHAR(13),''))) + '],'''')' FROM
					dbo.STGkeys t CROSS APPLY STRING_SPLIT(t.INCLUDEDCOLS, ',') s  
					WHERE TNAME=@DESTBL
					FOR XML PATH(''),TYPE).value('.', 'VARCHAR(MAX)'),1,1,''),'@',' OR '))
				ELSE
					SET @UPD_WHERE=(SELECT REPLACE(STUFF((SELECT '@ISNULL(T.[' + COLUMN_NAME + '],'''')!=ISNULL(S.[' + COLUMN_NAME + '],'''')' FROM
					INFORMATION_SCHEMA.COLUMNS 
					WHERE TABLE_NAME=@TBL AND COLUMN_NAME NOT IN('Date Process','Date Extract','DateProcess','DateExtract')
					FOR XML PATH('')),1,1,''),'@',' OR '))	
		
				SET @DELKEY_WHERE=(SELECT REPLACE(STUFF((SELECT ',S.[' + s.value + '] IS NULL' FROM
				dbo.STGkeys t CROSS APPLY STRING_SPLIT(t.TKEYS, ',') s 
				WHERE TNAME=@DESTBL
				FOR XML PATH('')),1,1,''),',',' AND '))
			
				SET @NKEYS=(SELECT STUFF((SELECT ',[' + s.value + ']' FROM
				dbo.STGkeys t CROSS APPLY STRING_SPLIT(t.TKEYS, ',') s 
				WHERE TNAME=@DESTBL
				FOR XML PATH('')),1,1,''))
			
				SET @KEYSTYPE=(SELECT REPLACE(STUFF((SELECT ',ALTER TABLE TBL ALTER COLUMN [' + s.value + '] VARCHAR(500)' FROM
				dbo.STGkeys t CROSS APPLY STRING_SPLIT(t.TKEYS, ',') s 
				WHERE TNAME=@DESTBL
				FOR XML PATH('')),1,1,''),',',CHAR(10)))
			
				SET @SQL=REPLACE(@KEYSTYPE,'TBL','DBO.'+@TBL)
				EXEC(@SQL)
				SET @SQL='CREATE NONCLUSTERED INDEX IX_' + @TBL + ' ON DBO.' + @TBL + ' (' + @NKEYS + ');'
				EXEC(@SQL)
			
			SET @INS=(SELECT STUFF((SELECT ',[' + COLUMN_NAME + ']' FROM
			INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@TBL AND COLUMN_NAME NOT IN('Date Process','Date Extract','DateProcess','DateExtract')
			ORDER BY COLUMN_NAME
			FOR XML PATH('')),1,1,''))

			IF NOT EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@DESTBL AND TABLE_SCHEMA='dbo')
				BEGIN
					SET @SQL='SELECT ' + @INS + ' INTO DBO.' + @DESTBL + ' FROM DBO.' + @TBL + ' WHERE 1<>1'
					EXEC(@SQL)
				
					SET @SQL=REPLACE(@KEYSTYPE,'TBL','DBO.'+@DESTBL)
					EXEC(@SQL)
				
					SET @SQL='CREATE NONCLUSTERED INDEX IX_' + @DESTBL + ' ON DBO.' + @DESTBL + ' (' + @NKEYS + ');'
					EXEC(@SQL)
				
					SET @SQL='SELECT ' + @INS + ' INTO DBO.' + @DESTBL + '_Delta FROM ' + @TBL + ' WHERE 1<>1'
					EXEC(@SQL)
				
					SET @SQL=REPLACE(@KEYSTYPE,'TBL','DBO.'+@DESTBL+'_Delta')
					EXEC(@SQL)
				
					SET @SQL='CREATE NONCLUSTERED INDEX IX_' + @DESTBL + '_Delta ON DBO.' + @DESTBL + '_Delta (' + @NKEYS + ');'
					EXEC(@SQL)
				
					SET @SQL='ALTER TABLE DBO.' + @DESTBL + '_Delta ADD ACTION VARCHAR(50)' + CHAR(10)
					+ 'ALTER TABLE DBO.' + @DESTBL + '_Delta ADD ISCONSUMED BIT DEFAULT 0' + CHAR(10)
					+ 'ALTER TABLE DBO.' + @DESTBL + '_Delta ADD CREATEDDATE DATETIME DEFAULT GETUTCDATE()' + CHAR(10) +
					+ 'ALTER TABLE DBO.' + @DESTBL + ' ADD ISCONSUMED BIT DEFAULT 0' + CHAR(10) +
					+ 'ALTER TABLE DBO.' + @DESTBL + ' ADD MODIFIEDDATE DATETIME DEFAULT GETUTCDATE()' + CHAR(10) +
					+ 'ALTER TABLE DBO.' + @DESTBL + ' ADD CREATEDDATE DATETIME DEFAULT GETUTCDATE()'
					EXEC(@SQL)

					SET @SQL='CREATE NONCLUSTERED INDEX [IX_' + @DESTBL + '_CREATEDDATE] ON [dbo].[' + @DESTBL + '](CREATEDDATE)' + CHAR(10) 
					+ 'CREATE NONCLUSTERED INDEX [IX_' + @DESTBL + '_Delta_CREATEDDATE] ON [dbo].[' + @DESTBL + '_Delta](CREATEDDATE)'
					EXEC(@SQL)

				END
				ELSE
					BEGIN
						IF EXISTS(SELECT 1 FROM (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@TBL AND COLUMN_NAME NOT IN('Date Process','Date Extract','DateProcess','DateExtract')
						EXCEPT
						SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@DESTBL AND TABLE_SCHEMA='dbo') AS G)
						BEGIN

						SET @SQL=(SELECT REPLACE(STUFF((SELECT ',ALTER TABLE DBO.' + @DESTBL + '_Delta ADD [' + COLUMN_NAME +
						'] ' + CASE WHEN DATA_TYPE IN ('nvarchar','varchar') THEN 'VARCHAR(500)' ELSE DATA_TYPE END
						FROM (SELECT COLUMN_NAME,DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@TBL
						AND COLUMN_NAME IN (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@TBL AND COLUMN_NAME NOT IN('Date Process','Date Extract','DateProcess','DateExtract')
						EXCEPT
						SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@DESTBL+'_Delta' AND TABLE_SCHEMA='dbo')
						) AS G 
						FOR XML PATH('')),1,1,''),',',CHAR(10)))

						EXEC(@SQL)

						SET @SQL=(SELECT REPLACE(STUFF((SELECT ',ALTER TABLE DBO.' + @DESTBL + ' ADD [' + COLUMN_NAME +
						'] ' + CASE WHEN DATA_TYPE IN ('nvarchar','varchar') THEN 'VARCHAR(500)' ELSE DATA_TYPE END
						FROM (SELECT COLUMN_NAME,DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@TBL
						AND COLUMN_NAME IN (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@TBL AND COLUMN_NAME NOT IN('Date Process','Date Extract','DateProcess','DateExtract')
						EXCEPT
						SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@DESTBL AND TABLE_SCHEMA='dbo')
						) AS G 
						FOR XML PATH('')),1,1,''),',',CHAR(10)))

						EXEC(@SQL)
					

					END
				END
		
			
				SET @KEYS=(SELECT REPLACE(STUFF((SELECT ',T.[' + s.value + ']=S.[' + s.value + ']' FROM
				dbo.STGkeys t CROSS APPLY STRING_SPLIT(t.TKEYS, ',') s 
				WHERE TNAME=@DESTBL
				FOR XML PATH('')),1,1,''),',',' AND '))
			
				SET @UPD=(SELECT STUFF((SELECT ',T.[' + s.value + ']=S.[' + s.value + ']' FROM
				INFORMATION_SCHEMA.COLUMNS t CROSS APPLY STRING_SPLIT(t.COLUMN_NAME, ',') s 
				WHERE TABLE_NAME=@TBL AND t.COLUMN_NAME NOT IN('Date Process','Date Extract','DateProcess','DateExtract')
				FOR XML PATH('')),1,1,''))

				SET @INSVALS=(SELECT STUFF((SELECT ',S.[' + COLUMN_NAME + ']' FROM
				INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@TBL AND COLUMN_NAME NOT IN('Date Process','Date Extract','DateProcess','DateExtract')
				ORDER BY COLUMN_NAME
				FOR XML PATH('')),1,1,''))
			
				SET @INSP2=(SELECT STUFF((SELECT ',S.[' + COLUMN_NAME + ']' FROM
				INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@TBL AND COLUMN_NAME NOT IN('Date Process','Date Extract','DateProcess','DateExtract')
				ORDER BY COLUMN_NAME
				FOR XML PATH('')),1,1,''))

			
				SET @SQL='INSERT INTO DBO.' + @DESTBL + '(' + @INS + ')' + CHAR(10) +
				'SELECT ' + @INSP2 + ' FROM DBO.' + @TBL + ' AS S' + CHAR(10) +
				'LEFT JOIN DBO.' + @DESTBL + ' AS T ON ' + @KEYS + CHAR(10) +
				'WHERE ' + @INSKEY_WHERE
			
				EXEC(@SQL)
			
				
				SET @SQL=REPLACE(@INS,'[','INSERTED.[')
				EXEC('UPDATE T' +
				' SET T.MODIFIEDDATE=GETUTCDATE(),' + @UPD + 
				' OUTPUT ' + @SQL + ',''UPDATE'' INTO DBO.' + @DESTBL + '_Delta(' + @INS + ',ACTION)' + 
				' FROM ' + @DESTBL + ' AS T' + 
				' RIGHT JOIN DBO.' + @TBL + ' AS S ON ' + @KEYS + 
				' WHERE ' + @UPDKEY_WHERE + ' AND (' + @UPD_WHERE + ')')

			
				SET @SQL=REPLACE(@INS,'[','DELETED.[')

				EXEC('DELETE T OUTPUT ' + @SQL + ',''DELETE'' INTO DBO.' + @DESTBL + '_Delta(' + @INS + ',ACTION) FROM DBO.' + @DESTBL + ' T' + 
				' LEFT JOIN DBO.' + @TBL + ' AS S ON ' + @KEYS + 
				' WHERE ' + @DELKEY_WHERE)

        
			SET @SQL='DROP TABLE dbo.' + @TBL

			EXEC(@SQL)
		
			UPDATE DBO.ETLCONTROL
			SET ISPROCESSED=1,COMPLETEDDATE=GETUTCDATE()
			WHERE FPATH=@FPATH AND FNAME=@FNAME
		
	
		END
	END TRY
	BEGIN CATCH
			SET @SQL='IF OBJECT_ID(''' + @TBL + ''') IS NOT NULL 
						  DROP TABLE dbo.' + @TBL

			EXEC(@SQL)

			INSERT DBO.ETLERRORLOG(SRC,FNAME,ERROR)
			SELECT ERROR_PROCEDURE(), @FNAME, ERROR_MESSAGE()

			RETURN;
	END CATCH
END



